@model ELF.Models.BaiDangSanPham
@{
    int maND = int.Parse(Session["maND"].ToString());
    Layout = null;
}
<head>

    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="" />
    <meta name="keywords" content="" />

    <link rel="icon" href="~/images/fav.png" type="image/png" sizes="16x16">

    <link rel="stylesheet" href="~/css/main.min.css">
    <link rel="stylesheet" href="~/css/style.css">
    <link rel="stylesheet" href="~/css/color.css">
    <link rel="stylesheet" href="~/css/responsive.css">

</head>
@using (Html.BeginForm("Create", "BaiDangSanPhams", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="modal-dialog"style="width:700px">
        <div class="modal-content" style="width:700px">
            <div class="modal-header">
                <h5 class="f-title"><i class="ti-info-alt"></i>Đăng bài</h5>
            </div>
            <div class="modal-body">
                <div class="form-group half" style="width:320px">
                    
                    @Html.EditorFor(model => model.tenSP, new
               {
                   htmlAttributes = new
                   {
                       @type = "text",
                       @required = "",
                       @oninvalid = "this.setCustomValidity('Bạn chưa nhập tên cho sản phẩm')",
                       @oninput = "setCustomValidity('')"
                   }
               })
                    @Html.ValidationMessageFor(model => model.tenSP, "", new { @class = "text-danger" })
                    <label class="control-label" for="input"  style="width:150px;  left:-40px">Tên sản phẩm</label>
                    <i class="mtrl-select" style="width:300px"></i>
                </div>
                <div class="form-group half" style="width:320px">
                    @Html.DropDownList("maLSP", null, htmlAttributes: new { @style = "height: 30.4px;", @class = "form-control",
                  
               })
                    @Html.ValidationMessageFor(model => model.maLSP, "", new { @class = "text-danger" })
                    <label class="control-label" for="input" style="width:150px;  left:-40px">Loại sản phẩm</label>
                    <i class="mtrl-select" style="width:320px"></i>
                </div>
                <div class="form-group">
                    <div class="form-group half" style="width:320px">
                        @Html.EditorFor(model => model.gia, new { htmlAttributes = new {
                       @type = "number",
                       @required = "",
                       @oninvalid = "this.setCustomValidity('Bạn chưa nhập giá cho sản phẩm')",
                       @oninput = "setCustomValidity('')"
                   } })
                        @Html.ValidationMessageFor(model => model.gia, "", new { @class = "text-danger" , })
                        <label class="control-label" for="input" style="width:150px;  left:-40px">Giá sản phẩm</label>
                        <i class="mtrl-select" style="width:300px"></i>
                    </div>
                    <div class="form-group half" style="width:320px">
                        @Html.EditorFor(model => model.soLuong, new { htmlAttributes = new {
                       @type = "number",
                       @required = "",
                       @oninvalid = "this.setCustomValidity('Bạn chưa nhập số lượng cho sản phẩm')",
                       @oninput = "setCustomValidity('')"

                   } })
                        @Html.ValidationMessageFor(model => model.soLuong, "", new { @class = "text-danger" })
                        <label class="control-label" for="input" style="width:150px;  left:-40px">Số lượng</label>
                        <i class="mtrl-select" style="width:320px"></i>
                    </div>
                </div>
                <div class="form-group">
                    @Html.TextAreaFor(model => model.noiDung, new { htmlAttributes = new { @style = "height: 50px;",
                   @type = "text",
                   @required = "",
                   @oninvalid = "this.setCustomValidity('Bạn chưa nhập mô tả cho sản phẩm')",
                   @oninput = "setCustomValidity('')"
               } })
                    @Html.ValidationMessageFor(model => model.noiDung, "", new { @class = "text-danger" })
                    <label class="control-label" for="textarea">Mô tả</label>
                    <i class="mtrl-select"></i>
                </div>
                <div class="form-group">



                    <div class="input-group js-input-file">
                        @*<input class="input-file" type="file" name="file_cv" id="file">*@
                        <input accept="image/*" type="file" name="img" id="imgInp"  required="required" oninvalid="this.setCustomValidity('Bạn chưa chọn hình ảnh cho sản phẩm')" oninput="setCustomValidity('')"><br>
                        <img id="blah" src="#" width="200" alt="Image preview...">
                        <label class="control-label" for="input" style=" top: -20px" >Hình ảnh</label>
                        <script>
                            imgInp.onchange = evt => {
                                const [file] = imgInp.files
                                if (file) {
                                    blah.src = URL.createObjectURL(file)
                                }
                            }
                        </script>

                    </div>
                    <div class="modal-footer">
                        @Html.Hidden("maND", maND)
                        <button type="button" class="mtr-btn" data-dismiss="modal"><span>Hủy</span></button>
                        <button type="submit" class="mtr-btn"><span>Đăng</span></button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}


@*<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

<script>
    const image = document.getElementById("ImagePath");
    const vunganh = document.getElementById("image_aria");
    const anh = vunganh.querySelector(".anh");
    const anhtext = vunganh.querySelector(".them_image");
    image.addEventListener("change", function () {
        const file = this.files[0];
        if (file) {
            const reader = new FileReader();
            anhtext.style.display = "none";
            anh.style.display = "block";
            reader.addEventListener("load", function () {
                anh.setAttribute("src", this.result);
            });
            reader.readAsDataURL(file);
        }
    });
</script>*@
